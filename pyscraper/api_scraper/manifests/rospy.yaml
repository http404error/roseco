actions: []
api_documentation: http://docs.ros.org/hydro/api/rospy/html
authors: Ken Conley
brief: ''
bugtracker: ''
depends:
- rosgraph_msgs
- python-yaml
- genpy
- catkin
- roscpp
- rosgraph
- roslib
- python-numpy
- python-rospkg
- std_msgs
depends_on:
- flir_ptu_driver
- pr2_move_base
- rocon_conductor_graph
- cob_collision_velocity_filter
- grizzly_description
- rqt_pose_view
- usbl
- rosserial_embeddedlinux
- baxter_examples
- epos_driver
- roswww_pack
- jaco_demo
- tf_publisher_gui
- rosjava_build_tools
- realtime_tools
- cob_lookat_action
- master_sync_fkie
- target_detector
- labust_execution
- rgbd_rosbag_tools
- v4r_uvc
- segbot_gazebo_concert
- lizi_base_station
- sr_example
- jaco_driver
- ps3joy
- default_cfg_fkie
- rqt_web
- visp_tracker
- cob_light
- rviz
- rocon_gateway
- cob_sound
- launch_tools
- pr2_mechanism_controllers
- dynamixel_driver
- wheeled_robin_node
- rocon_utilities
- concert_conductor
- concert_simple_scheduler
- rqt_logger_level
- rocon_app_manager
- kingfisher_teleop
- rosserial_xbee
- rosserial_arduino
- sr_gui_movement_recorder
- ackermann_qt
- cob_dashboard
- roshlaunch
- cob_tray_monitor
- teleop_twist_keyboard
- rqt_msg
- ackermann_hks
- master_discovery_fkie
- segbot_sensors
- pr2_mechanism_diagnostics
- sr_gui_self_test
- rocon_gateway_graph
- video_player
- sentis_tof_m100
- cob_hwboard
- pladypos
- people_velocity_tracker
- test_diagnostic_aggregator
- rospatlite
- pr2_gazebo
- lizi_description
- fake_odom
- rqt_py_console
- pano_ros
- grizzly_teleop
- sr_gui_bootloader
- rqt_top
- opencv_tests
- rocon_interactions
- ml_classifiers
- rqt_ez_publisher
- cob_grasp_generation
- pysdf
- schunk_simulated_tactile_sensors
- cart2
- turtlebot_calibration
- rocon_uri
- multi_level_map_server
- sr_gui_controller_tuner
- bondpy
- sklearn
- tf2_py
- create_node
- rqt_launch
- baxter_tools
- sr_gui_motor_resetter
- cob_voltage_control
- simple_approximate_time_synchronizer
- cob_phidgets
- dynamic_bandwidth_manager
- nao_driver
- jsk_interactive
- blort_ros
- wifi_ddwrt
- template
- segbot_gui
- nmea_gps_driver
- multi_map_server
- caddy_ui
- rostwitter
- map_mux
- camera_info_manager_py
- wiimote
- joy_teleop
- acc_finder
- imu_monitor
- sr_gui_joint_slider
- rqt_tf_tree
- yocs_virtual_sensor
- win_ros
- moveit_ros_planning_interface
- mavros
- node_manager_fkie
- cob_script_server
- rqt_decision_graph
- camera_calibration
- rosservice
- rqt_bag_plugins
- create_dashboard
- rqt_robot_monitor
- roboteq_diagnostics
- cob_pick_place_action
- hector_exploration_planner
- labust_uwsim
- sr_edc_muscle_tools
- wheeled_robin_formation_drive
- imu_recalibration
- concert_orchestra
- sr_ronex_test
- rosR
- sr_ronex_examples
- rosh
- ric_base_station
- rosbridge_server
- move_base
- leap_motion
- key_teleop
- rqt_bag
- parallel_util
- matlogger
- kobuki_node
- test_rospy
- test_rosservice
- skeleton_markers
- biotac_log_parser
- gazebo_plugins
- pr2_camera_synchronizer
- calibration_estimation
- rocon_service_pair_msgs
- cob_moveit_interface
- diagnostic_aggregator
- biotac_logger
- sr_gui_muscle_driver_bootloader
- kobuki_dashboard
- rqt_console
- snippets
- open_door_detector
- pano_py
- kobuki_qtestsuite
- moveit_python
- hector_heat_detection
- rqt_runtime_monitor
- rqt_pr2_dashboard
- ur_driver
- osm_cartography
- rqt_srv
- pr2_computer_monitor
- google_glass_driver
- gspeech
- rosh_common
- household_objects_database
- baxter_interface
- plot_tools
- rqt_action
- rocon_master_info
- dynamixel_controllers
- rostest
- v4r_artoolkitplus
- nodelet
- fingertip_pressure
- pr2_controller_manager
- hironx_tutorial
- actionlib
- rosnode_rtc
- concert_scheduler_requests
- nao_pose
- base_local_planner
- moveit_commander
- visp_ros
- turtle_concert
- rqt_py_common
- posedetectiondb
- diagnostic_common_diagnostics
- rostopic
- axis_camera
- sr_gui_grasp_controller
- test_rosbag
- ackermann_vehicle_gazebo
- rocon_apps
- nmea_navsat_driver
- pr2_power_board
- phidget_motor
- capabilities
- advantech
- rqt_reconfigure
- test_nodelet_topic_tools
- tf2_ros
- wifi_scan
- pykdl_utils
- pddl_planner
- robot_mechanism_controllers
- rosserial_client
- hector_motion_detection
- rosserial_python
- mrpt_bridge
- cr_calibration
- ur_kin_py
- jsk_interactive_test
- rospy_tutorials
- rqt_gui_py
- rocon_scheduler_requests
- declination
- rocon_python_comms
- warehouse_ros
- rosserial_windows
- rocon_remocon
- rosjava_tools
- sr_gui_hand_calibration
- rocon_hub_client
- labust_gui
- kobuki_auto_docking
- rocon_python_utils
- husky_base
- move_base_straight
- rqt_moveit
- unique_id
- sr_hand
- rocon_launch
- rqt_graph
- jsk_perception
- sr_gui_change_muscle_controllers
- linux_hardware
- robin_people_detection
- diver_kinematics
- cob_tactiletools
- rqt_robot_dashboard
- bvt_sdk
- object_recognition_clusters
- route_network
- scheduler_request_manager
- rocon_gateway_tests
- bag_tools
- sound_play
- pr2_gazebo_plugins
- pi_tracker
- ethercat_trigger_controllers
- robot_task
- rocon_test
- geneus
- map_server
- fake_localization
- gazebo2rviz
- concert_roles
- rosjson_time
- decision_making
- labust_sim
- hrl_geom
- rosapi
- sr_robot_lib
- joint_state_publisher
- footstep_planner
- iwaki
- ros_comm
- rosbridge_library
- dynamic_reconfigure
- concert_resource_pool
- husky_teleop
- bwi_guidance_concert
- ipa_canopen_ros
- sr_utilities
- map_store
- sr_gazebo_plugins
- rqt_nav_view
- roswww
- cob_command_gui
- argos3d_p100
- arbotix_python
- pocketsphinx
- v4r_ellipses
- bayesian_belief_networks
- sr_gui_change_controllers
- dynamic_tf_publisher
- underwater_vehicle_dynamics
- pr2_dashboard_aggregator
- rosh_geometry
- ros_arduino_python
- neato_node
- rosbag
description: "rospy is a pure Python client library for ROS. The rospy client\n  \
  \  API enables Python programmers to quickly interface with ROS <a href=\"http://ros.org/wiki/Topics\"\
  >Topics</a>, <a href=\"http://ros.org/wiki/Services\">Services</a>, and <a href=\"\
  http://ros.org/wiki/Parameter Server\">Parameters</a>. The\n    design of rospy\
  \ favors implementation speed (i.e. developer\n    time) over runtime performance\
  \ so that algorithms can be quickly\n    prototyped and tested within ROS. It is\
  \ also ideal for\n    non-critical-path code, such as configuration and initialization\n\
  \    code. Many of the ROS tools are written in rospy to take\n    advantage of\
  \ the type introspection capabilities.\n\n    Many of the ROS tools, such\n    as\
  \ <a href=\"http://ros.org/wiki/rostopic\">rostopic</a>\n    and <a href=\"http://ros.org/wiki/rosservice\"\
  >rosservice</a>, are\n    built on top of rospy."
devel_jobs:
- devel-hydro-ros_comm
doc_job: doc-hydro-ros_comm
has_changelog_rst: true
license: BSD
maintainer_status: maintained
maintainers: Dirk Thomas <dthomas@osrfoundation.org>
metapackages:
- win_ros
- ros_comm
msgs: []
package_type: package
release_jobs:
- ros-hydro-rospy_sourcedeb
- ros-hydro-rospy_binarydeb_precise_amd64
- ros-hydro-rospy_binarydeb_precise_i386
- ros-hydro-rospy_binarydeb_quantal_amd64
- ros-hydro-rospy_binarydeb_quantal_i386
- ros-hydro-rospy_binarydeb_raring_amd64
- ros-hydro-rospy_binarydeb_raring_i386
repo_name: ros_comm
repo_url: ''
srvs: []
timestamp: 1405773140.283059
url: http://ros.org/wiki/rospy
vcs: git
vcs_uri: https://github.com/ros/ros_comm.git
vcs_version: hydro-devel
